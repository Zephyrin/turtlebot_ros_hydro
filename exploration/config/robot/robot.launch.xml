<launch>

  <!-- Un robot -->
  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.0"/>
  <arg name="o_y" default="-5.0"/>
  <arg name="o_x" default="-5.0"/>
  <arg name="angle" default="0.0" />
  <arg name="robot_name" default="turtlebot" />
  
  <!-- Gazebo model spawner for turtlebot -->
  <node name="spawn_$(arg robot_name)" pkg="gazebo_ros" type="spawn_model"
        args="-param /robot_description
	      -urdf
	      -unpause
	      -x $(arg x)
	      -y $(arg y)
	      -z $(arg z)
	      -Y $(arg angle)
	      -model $(arg robot_name)
	      " respawn="false" output="screen" >
  </node>
  
  <!-- Modification du mobile_base en robot_name pour correspondre avec notre robot -->
  <node pkg="nodelet" type="nodelet" name="$(arg robot_name)_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="cmd_vel_mux"
        args="load yocs_cmd_vel_mux/CmdVelMuxNodelet $(arg robot_name)_nodelet_manager">
    <param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml" />
    <remap from="cmd_vel_mux/output" to="$(arg robot_name)/commands/velocity"/>
  </node>
  <!-- bumper2pc.launch.xml -->
  <node pkg="nodelet" type="nodelet" name="bumper2pointcloud" args="load kobuki_bumper2pc/Bumper2PcNodelet $(arg robot_name)_nodelet_manager">
    <param name="pointcloud_radius" value="0.24"/>
    <remap from="bumper2pointcloud/pointcloud"   to="sensors/bumper_pointcloud"/>
    <remap from="bumper2pointcloud/core_sensors" to="sensors/core"/>
  </node>
  <!-- End bumper2pc.launch.xml -->
  
  <!-- robot_state_publisher  -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
    <param name="tf_prefix" type="string" value="$(arg robot_name)" />
  </node>

  <!-- fake lazer -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="$(arg robot_name)/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="camera/depth/image_raw"/>
    <remap from="scan" to="scan"/>
  </node>

  <!-- Velocity smoother -->
  <node pkg="nodelet" type="nodelet" name="navigation_velocity_smoother" args="load yocs_velocity_smoother/VelocitySmootherNodelet $(arg robot_name)_nodelet_manager">
    <rosparam file="$(find turtlebot_bringup)/param/defaults/smoother.yaml" command="load"/>
    <remap from="navigation_velocity_smoother/smooth_cmd_vel" to="cmd_vel_mux/input/navi"/>
    <remap from="navigation_velocity_smoother/odometry" to="odom"/>
    <remap from="navigation_velocity_smoother/robot_cmd_vel" to="$(arg robot_name)/commands/velocity"/>
  </node>
  <!-- End Velocity smoother -->

  <!-- Safety controller-->
  <node pkg="nodelet" type="nodelet" name="kobuki_safety_controller" args="load kobuki_safety_controller/SafetyControllerNodelet $(arg robot_name)_nodelet_manager">
    <remap from="kobuki_safety_controller/cmd_vel" to="cmd_vel_mux/input/safety_controller"/>
    <remap from="kobuki_safety_controller/events/bumper" to="$(arg robot_name)/events/bumper"/>
    <remap from="kobuki_safety_controller/events/cliff" to="$(arg robot_name)/events/cliff"/>
    <remap from="kobuki_safety_controller/events/wheel_drop" to="events/wheel_drop"/>
  </node>
  <!-- End Safety controller -->

  <!-- Gmapping -->
  <include file="$(find exploration)/config/gmapping_gazebo/gmapping.launch" >
    <arg name="scan_topic" value="scan" />
    <arg name="robot_name" value="$(arg robot_name)" />
  </include>
<!--
  <node name="initial_pose" output="screen" pkg="exploration" respawn="false" type="initial_pose">
    <param name="x" value="$(arg x)" />
    <param name="y" value="$(arg y)" />
    <param name="robot_name" value="$(arg robot_name)" />
  </node>
-->
<!--
  <include file="$(find exploration)/config/amcl_node.xml">
    <arg name="robot_name" value="$(arg robot_name)" />
    <arg name="initial_pose_x" value="$(arg x)" />
    <arg name="initial_pose_y" value="$(arg y)" />
    <arg name="initial_cov_a" value="$(arg angle)" />
  </include>
-->

  <include file="$(find exploration)/config/move_base_gazebo/move_base.xml" >
    <arg name="robot_name" value="$(arg robot_name)" />
    <arg name="o_x" value="$(arg o_x)" />
    <arg name="o_y" value="$(arg o_y)" />
  </include>

</launch>
